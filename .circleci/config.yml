version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:8-jessie-browsers-legacy
      
    working_directory: ~/fww-web
    parameters:
      should_build:
         type: string
         default: "succes"
 
    steps:
      - checkout
      - run: echo "Welcome to FFW web deploy"
      - run:
          name: Print npm version
          command:  |
            pwd
            npm -v
            echo test "<< parameters.should_build >>"        

      - run: npm install
    
      - type: cache-save
        name: Store/update package cache
        key: fww-web-dependencies-{{ checksum "package.json" }}
        paths:
          - node_modules
          
      - run: # run tests
          name: Run jest tests
          command: |
            mkdir -p test-results
            
            npm run test
      - run:
          name: Run javascript linter
          command: |
            npm run lint && echo "++Linting Completed ${result}++"            
            npm run format
        
      - store_test_results:
          path: test-results
    
      - store_artifacts:
          path: test-results

  deploy_dev: 
    docker:
      - image: circleci/node:8-jessie-browsers-legacy
    working_directory: ~/fww-web
    
    environment:
      aws_access_key_id: AccessKey
      aws_secret_access_key: SecretKey
      
    steps:
      #build reactjs code and deploy 
      #- run: npm run build
      - checkout
      - run: 
          command: |
            whoami
            ls
            echo "${aws_access_key_id}"
            
      - run: sudo apt-get update && sudo apt-get install -y python-dev
      - run: curl -O https://bootstrap.pypa.io/get-pip.py
      - run: sudo python get-pip.py
      - run: sudo pip install awscli --upgrade  
      - run: aws --version
      #- run: 
      #    name: S3 web deploy
      #    command: AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}" AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}" aws s3 sync build/ s3://k8sasv --delete          

        
workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - build
   #       should_build: "test"
      - deploy_dev:
          requires:
            - build
          filters:
            branches:
              only: development  
